pr:
  branches:
    include:
      - dev
      - v*.x

trigger:
  branches:
    include:
      - dev
      - v*.x
  tags:
    include:
      - v*.*.*

variables:
  isTagTriggered: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/')]
  prefix: $[format('0.{0:yyyy}.{0:MMdd}', pipeline.startTime)]
  version: $[format('{0}.{1}', variables.prefix, counter(variables.prefix, 1))] # e.g. 0.2001.0203.4

pool:
  vmImage: windows-latest

steps:
  - script: |
      set tag=$(Build.SourceBranchName)
      echo ##vso[task.setvariable variable=version]%tag:~1%
    displayName: Extract version # e.g. 1.2.3
    condition: and(succeeded(), eq(variables.isTagTriggered, 'True'))

  - task: UseDotNet@2
    displayName: Acquire .NET SDK
    inputs:
      packageType: sdk
      version: 6.x
      performMultiLevelLookup: true

  - task: DotNetCoreCLI@2
    displayName: Build solution
    inputs:
      command: build
      arguments: --configuration Release -property:Version=$(version) -property:CommitHash=$(Build.SourceVersion)

  - task: DotNetCoreCLI@2
    displayName: Test extension
    inputs:
      command: test
      projects: test/WebJobs.Extensions.RabbitMQ.Tests/WebJobs.Extensions.RabbitMQ.Tests.csproj
      arguments: --configuration Debug

  - task: EsrpCodeSigning@1
    displayName: Sign extension assembly
    condition: and(succeeded(), eq(variables.isTagTriggered, 'True'))
    inputs:
      ConnectedServiceName: ESRP Service
      FolderPath: src/bin/Release/netstandard2.0
      Pattern: WebJobs.Extensions.RabbitMQ.dll
      signConfigType: inlineSignParams
      inlineOperation: |
        [
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolSign",
            "Parameters": {
              "OpusName": "Microsoft",
              "OpusInfo": "http://www.microsoft.com",
              "FileDigest": "/fd \"SHA256\"",
              "PageHash": "/NPH",
              "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
            },
            "ToolName": "sign",
            "ToolVersion": "1.0"
          },
          {
            "KeyCode": "CP-230012",
            "OperationCode": "SigntoolVerify",
            "Parameters": {},
            "ToolName": "sign",
            "ToolVersion": "1.0"
          }
        ]

  - task: DotNetCoreCLI@2
    displayName: Pack extension
    condition: and(succeeded(), eq(variables.isTagTriggered, 'True'))
    inputs:
      command: pack
      searchPatternPack: src/WebJobs.Extensions.RabbitMQ.csproj
      configurationToPack: Release
      buildProperties: Version=$(version);CommitHash=$(Build.SourceVersion)
      outputDir: $(Build.ArtifactStagingDirectory)/Microsoft.Azure.WebJobs.Extensions.RabbitMQ
      nobuild: true
      verbosityPack: minimal

  - task: EsrpCodeSigning@1
    displayName: Sign extension package
    condition: and(succeeded(), eq(variables.isTagTriggered, 'True'))
    inputs:
      ConnectedServiceName: ESRP Service
      FolderPath: $(Build.ArtifactStagingDirectory)/Microsoft.Azure.WebJobs.Extensions.RabbitMQ
      Pattern: Microsoft.Azure.WebJobs.Extensions.RabbitMQ.*.nupkg
      signConfigType: inlineSignParams
      inlineOperation: |
        [
            {
              "KeyCode": "CP-401405",
              "OperationCode": "NuGetSign",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            },
            {
              "KeyCode": "CP-401405",
              "OperationCode": "NuGetVerify",
              "Parameters": {},
              "ToolName": "sign",
              "ToolVersion": "1.0"
            }
        ]

  - publish: $(Build.ArtifactStagingDirectory)/Microsoft.Azure.WebJobs.Extensions.RabbitMQ
    displayName: Publish extension package
    artifact: drop
    condition: and(succeeded(), eq(variables.isTagTriggered, 'True'))
  
  # - task: ManifestGeneratorTask@0
  #   displayName: 'SBOM Generation Task'
  #   inputs:
  #     BuildDropPath: '$(Build.ArtifactStagingDirectory)'
  #     PackageName: 'Microsoft.Azure.WebJobs.Extensions.Kafka'
  #     Verbosity: 'Information'

  # - task: PublishBuildArtifacts@1
  #   inputs:
  #     pathToPublish: '$(Build.ArtifactStagingDirectory)'
  #     artifactName: 'drop'
  #     publishLocation: 'Container'

  # - task: Maven@3
  #   displayName: Set Java bindings package version
  #   inputs:
  #     mavenPomFile: binding-library/java/pom.xml
  #     goals: versions:set
  #     options: --define=newVersion=$(version)

  # - task: Maven@3
  #   displayName: Build Java bindings package
  #   inputs:
  #     mavenPomFile: binding-library/java/pom.xml
  #     options: --batch-mode --define=gpg.skip --define=org.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --update-snapshots
